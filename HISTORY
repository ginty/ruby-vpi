%#----------------------------------------------------------------------------
## VERSIONS
%#----------------------------------------------------------------------------

This section contains release notes of current and past releases.

%#----------------------------------------------------------------------------
### Version 6.3.0 (2006-08-27)
%#----------------------------------------------------------------------------

This release adds support for the [GPL Cver] simulator, provides both binary
and source packages, and explicitly defines the version numbering system.

New features:

  * The GPL Cver simulator is now supported.

  * Ruby-VPI now only needs to be built once.  You can run tests with
    different Verilog simulators without having to re-compile Ruby-VPI.

  * Release packages are now available in both source and binary form.

Bug fixes:

  * The RSpec based specifications for the counter example now use the
    `should_equal` instead of the `should_be` assertion, because the latter
    ensures strict equivalence.  For instance, it will fail when a Fixnum is
    compared to a Bignum.

Housekeeping:

  * We now follow the RubyGems project's [rational versioning policy](
    http://www.rubygems.org/read/chapter/7 ).  The version numbers of previous
    releases have been revised accordingly:

        Release Date | Old Version | New Version
        ------------ | ----------- | -----------
         2006-08-26  |    0.9.2    |    6.2.0
         2006-08-09  |    0.9.1    |    6.1.0
         2006-08-07  |     0.9     |    6.0.0
         2006-08-04  |    0.8.1    |    5.1.1
         2006-07-29  |     0.8     |    5.1.0
         2006-07-22  |     0.7     |    5.0.0
         2006-05-25  |     0.6     |    4.0.0
         2006-05-13  |     0.5     |    3.2.0
         2006-04-28  |     0.4     |    3.1.0
         2006-04-23  |     0.3     |    3.0.0
         2006-04-17  |     0.2     |    2.0.0
         2006-02-26  |     0.1     |    1.0.0
         1999-10-31  |     0.0     |    0.0.0

%#----------------------------------------------------------------------------
### Version 6.2.0 (2006-08-26)
%#----------------------------------------------------------------------------

This release beautifies generated tests, adds checks to find signal width
bugs, and includes a new tool.

Incompatible changes:

  * `put_value()` now returns the value it puts.  Therefore, it is easier to
    chain together a series of assignments:

        foo.intVal = bar.intVal = baz.intVal = 10

  * The test generator now decouples Ruby-VPI paths from Verilog benches via
    the RUBYLIB environment variable.

New features:

  * `put_value()` now verifies that the value it puts was written correctly.
    This helps to find bugs regarding invalid assumptions about the number of
    bits supported by a signal.

  * A tool which converts Verilog headers into Ruby has been added.

Housekeeping:

  * The test generator now uses ERB templates which ensures nice indentation
    of generated output.

  * The source code is now indented with two spaces instead of one tab
    character.

%#----------------------------------------------------------------------------
### Version 6.1.0 (2006-08-09)
%#----------------------------------------------------------------------------

This release simplifies generated tests and fixes a bug.

New features:

  * The test generator now produces simpler Ruby benches and specifications.

Bug fixes:

  * Boolean VPI property values are now correctly converted into Ruby truth values.

Housekeeping:

  * A template used by generated specifications has been added, and the
    counter example and tutorial have also been simplified accordingly.

%#----------------------------------------------------------------------------
### Version 6.0.0 (2006-08-07)
%#----------------------------------------------------------------------------

This release adds support and documentation for rapid prototyping of Verilog
designs in Ruby.

Incompatible changes:

  * The directory structure has been reorganized as follows:

    * `ext/` &rarr; `src/`
    * `tools/` &rarr; `bin/`
    * `examples/` &rarr; `samp/`

  * All template files have been moved into the `tpl/` directory.

New features:

  * Support for prototyping designs in Ruby, before they are implemented in
    Verilog, has been added.  The _same_ specification can now be used to
    verify both prototype _and_ design!  :-)

  * The tutorial in the user manual has been updated to discuss prototyping,
    and prototypes have been added to the counter example.

Housekeeping:

  * The user manual has been revised for consistency.

%#----------------------------------------------------------------------------
### Version 5.1.1 (2006-08-04)
%#----------------------------------------------------------------------------

This release fixes unreadable syntax coloring in the user manual.

Thank you:

  * Todd Nagengast and Matt Fischler notified me about unreadable text in the
    user manual.

Housekeeping:

  * Source code comments in the user manual are now readable.

  * The README and HISTORY files have been converted to [textile](
    http://www.textism.com/tools/textile/ ) format.

%#----------------------------------------------------------------------------
### Version 5.1.0 (2006-07-29)
%#----------------------------------------------------------------------------

This release adds a tutorial to the user manual, and improves the tools and
examples.

Thank you:

  * Phil Tomson corrected the URL of the RHDL website in the user manual.

New features:

  * `--name` and `-n` options, which lets you specify an identifier for a
    generated test, have been added to the `generate_test.rb` tool.

  * A tutorial, based on the counter example, has been added to the user
    manual.

  * A specification, expressed in unit test format, has been added to the
    counter example.

Bug fixes:

  * The value of a handle's boolean VPI property is treated as `false` if it
    is zero, because zero is `false` in the C language.

  * Running `rake clobber` in an example directory no longer destroys
    documentation in the Ruby-VPI directory.

  * The examples' Rakefiles now invoke all tests present in the directory via
    the `launcher_template.rake` template.

Housekeeping:

  * The user manual's appearance has been dramatically improved with syntax
    coloring for source code, and [graphics for admonitions and navigation](
    http://tango.freedesktop.org ).

  * The Rake template for test runners (generated by `tools/generate_test.rb`)
    has moved from `examples/template.rake` to
    `examples/runner_template.rake`.

%#----------------------------------------------------------------------------
### Version 5.0.0 (2006-07-22)
%#----------------------------------------------------------------------------

This release enhances the VPI utility layer and adds new content to the user
manual.

Thank you:

  * Jan Decaluwe corrected the description of MyHDL in the user manual.

Incompatible changes:

  * The `handle.value` and `handle.value=` methods have been removed.

New features:

  * The VPI utility layer provides access to VPI properties of handles in a
    [simpler, more powerful way]( manual.html#background.org.vpi ).

  * All VPI properties, except delay values, are now accessible from a handle.

Housekeeping:

  * The user manual has been revised and new content in the organization and
    usage sections has been added.

  * SWIG is no longer required for users because its output is included in the
    release package.

Tested and developed using:

  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

%#----------------------------------------------------------------------------
### Version 4.0.0 (2006-05-25)
%#----------------------------------------------------------------------------

This release adds a comprehensive user manual, upgrades from make to [Rake](
http://rake.rubyforge.org ), and improves the test generation tool.

Thank you:

  * Jose Renau solved the problem of strange delays that occurred whenever a
    design was reset.

Incompatible changes:

  * Rake has replaced the role of `make`.  All makefiles have been converted
    accordingly.

New features:

  * The test generation tool now generates multiple files (runner, bench,
    design, spec) and makes backups of existing files.  See its help
    information for details.

  * A comprehensive user manual, written in DocBook-XML, has been added.

  * Support for RSpec 0.5.4 has been added.

  * The example "counter" test bench now makes use of RSpec.

Tested and developed using:

  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

%#----------------------------------------------------------------------------
### Version 3.2.0 (2006-05-13)
%#----------------------------------------------------------------------------

This release adds a tool which generates test benches, and adds support for
[Behavior Driven Development]( http://behaviour-driven.org ) via the [RSpec](
http://rspec.rubyforge.org ) library.

Thank you:

  * Scott L Holmes helped me [use the RSpec library without its runner](
    http://article.gmane.org/gmane.comp.lang.ruby.general/150087 ) program.

New features:

  * Added a test generation tool, which generates most of a Ruby-VPI test
    bench from a Verilog 2001 module declaration.

  * Ability to use RSpec in a test bench has been added.

  * Ability to specify arbitrary command-line arguments to Verilog simulators
    has been added in the examples' makefile template.

Tested and developed using:

  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

%#----------------------------------------------------------------------------
### Version 3.1.0 (2006-04-28)
%#----------------------------------------------------------------------------

This release adds simple ways of reading and writing values to VPI handles,
adds documentation for the VPI utility layer, and fixes the pipelined ALU
example.

Incompatible changes:

  * The `msim` makefile target for Mentor Modelsim has been renamed to `vsim`.

New features:

  * Simple, consistent ways of reading and writing values to handles have been
    added to the VPI utility layer.  These ways are described in the
    `SWIG::TYPE_p_unsigned_int` class' documentation.

  * The makefiles now use the `rbconfig` library to determine the default
    compiler and linker flags for Ruby.

Bug fixes:

  * A race condition in the pipelined ALU example has been fixed.  This
    example should now run successfully in all Verilog simulators.

Housekeeping:

  * The project wiki has been abandoned in favor of RDoc.

  * The project website is now generated by RDoc.

Tested and developed using:

  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

%#----------------------------------------------------------------------------
### Version 3.0.0 (2006-04-23)
%#----------------------------------------------------------------------------

This release adds support for the _entire_ [IEEE Std. 1364-2005](
http://ieeexplore.ieee.org/xpl/standardstoc.jsp?isnumber=33945 ) VPI
interface, and updates the examples into unit tests.

Thank you:

  * The [SWIG developers]( http://www.swig.org/guilty.html ) made this project
  _much_ easier! ;-)

Incompatible changes:

  * The `VPI` module in Ruby has been renamed to `Vpi` and its sub-classes and
    functionality have been replaced by the VPI utility layer (see
    `src/vpi_util.rb`).  As a result, the `VPI::Handle` class and the
    `VPI::stop`, `VPI::finish`, and `VPI::reset` methods have been removed.

  * The `vsim` Makefile target for Mentor Modelsim has been renamed to `msim`.

New features:

  * The Ruby interface to VPI is now generated by [SWIG].

  * The ["final ballot" version](
    http://www.boydtechinc.com/ptf/archive/ptf_2005/0737.html ) of the
    `vpi_user.h` header file is now packaged along with and used by Ruby-VPI.

Housekeeping:

  * The examples now make use of Ruby's `Test::Unit` unit testing framework.

  * The makefiles for the examples have been simplified through the use of a
    common template.

Tested and developed using:

  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Mentor Modelsim 6.1d on x86_64 GNU/Linux

%#----------------------------------------------------------------------------
### Version 2.0.0 (2006-04-17)
%#----------------------------------------------------------------------------

This release fixes major bugs, adds support for [Mentor Modelsim], and removes
the `$ruby_task` callback.

Thank you:

  * Nobu Nakada explained the [cross-thread violation on rb_gc()](
    http://article.gmane.org/gmane.comp.lang.ruby.general/146653 ) error.

Incompatible changes:

  * Removed `$ruby_task("task name")` callback and `VPI::register_task("task
    name")` because interprocess communication is complicated at present.

New features:

  * The `test/unit` library can now be used in Ruby test bench.
  * Mentor Modelsim Verilog simulator now works with Ruby-VPI.
  * Added piplelined ALU example.

Bug fixes:

  * The "cross-thread violation on rb_gc()" error has been fixed.
  * The "stack level too deep (SystemStackError)" error has been fixed.

Tested and developed using:

  * Ruby 1.8.4 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4 and Modelsim 6.1d on x86_64 GNU/Linux
  * Ruby 1.8.4 and Synopsys VCS-MX X-2005.06-SP1 on SPARC4 SunOS 5.10

%#----------------------------------------------------------------------------
### Version 1.0.0 (2006-02-26)
%#----------------------------------------------------------------------------

This release adds enough Verilog VPI functionality to make Ruby-VPI usable for
simple test benches:

  * access Verilog objects through VPI handles
  * read and change VPI handle values
  * stop, finish, restart the simulation

Thank you:

  * Jose Renau helped me debug how Synopsys VCS works with Verilog VPI.  The
    problem was that VCS required calltf signatures to be `void (**)(void)`,
    whereas the Verilog standard defines a calltf signature as `PLI_INT32
    (**)(PLI_BYTE8**)`.

  * Ross Bamford, Eric Hodel, and Yukihiro Matsumoto [helped me discover](
    http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/180662 ) why
    the `SystemStackError` was happening.

New features:

  * Added ability to pass arbitrary command-line arguments to the Ruby
    interpreter (using `$ruby_init`).  Now you can invoke any Ruby script you
    want, instead of `pli_init.rb`.

  * Added ability to dynamically register system tasks from Ruby, using
    `VPI::register_task("task name")`, and call them from Verilog, using
    `$ruby_task("task name")`.

  * Added `VPI::Handle` class which encapsulates a `vpiHandle` VPI object.

  * Implemented some Verilog VPI functionality:

    * `VPI::handle_by_name(string, VPI::Handle)` &rarr; `VPI::Handle`
    * `VPI::handle_by_name(string)` &rarr; `VPI::Handle`
    * `VPI::Handle.put_value(integer)`
    * `VPI::Handle.value = integer`
    * `VPI::Handle.get_value` &rarr; `integer`
    * `VPI::Handle.value` &rarr; `integer`
    * `VPI::stop`
    * `VPI::finish`
    * `VPI::reset`

Tested and developed using:

  * Ruby 1.8.2 and Icarus Verilog 0.8 on i686 GNU/Linux
  * Ruby 1.8.4, Synopsys VCS X-2005.06, and Mentor Modelsim 6.1b on i686
    GNU/Linux

%#----------------------------------------------------------------------------
### Version 0.0.0 (1999-10-31)
%#----------------------------------------------------------------------------

This is Kazuhiro HIWADA's initial testing release of Ruby-VPI.  See its
[original announcement](
http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/18193 ) and
[source code]( http://rubyforge.org/frs/?group_id=1339&release_id=8852 ).

* Added ability to relay control from Verilog test bench to Ruby using
  `$ruby_callback()`, and vice versa using `PLI::relay_verilog`.

* Tested and developed using Ruby 1.4 and Verilog-XL from Cadence systems, on
  a SPARC machine running Solaris 2.6.
